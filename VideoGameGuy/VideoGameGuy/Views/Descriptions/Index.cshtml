@model VideoGameGuy.Data.DescriptionsViewModel

@{
    ViewData["Title"] = "Descriptions";
}

<link rel="stylesheet" href="~/css/descriptions.css" asp-append-version="true" />

<div id="descriptions_Grid">

    @* Content *@
    <div id="content_Grid">

        @* Status *@
        <div id="status_Grid">
            <input id="sessionId" type="hidden" name="sessionId" value="@Model.SessionId" />
            <input id="scoreValue" type="hidden" name="scoreValue" value="@Model.CurrentScore" />
            <input id="highestScoreValue" type="hidden" name="highestScoreValue" value="@Model.HighestScore" />

            <div id="score_Container">
                <div id="highestScoreDisplay" class="scoreText">Highest Score: @Model.HighestScore</div>
                <div id="scoreDisplay" class="scoreText">Score: @Model.CurrentScore</div>
            </div>
            <div id="timer">--</div>
        </div>

        @* Description *@
        <input id="gameTitle" type="hidden" name="gameTitle" value="@Model.CurrentRound?.GameTitle" />
        <div id="gameDescription">@Model.CurrentRound?.GameDescription</div>

        @* // User Input *@
        <input id="userInput" type="text" placeholder="[Enter Title]" autofocus/>
        <i id="correctIcon" class="fa-solid fa-square-check fa-2xl"></i>
        <i id="incorrectIcon" class="fa-solid fa-square-xmark fa-2xl" style="color: #db2a0a;"></i>

        @* // Buttons *@
        <form id="restart_Form" asp-action="Restart" method="post">
            <button id="restartButton" type="submit" role="button">Restart   <i class="fa-solid fa-refresh xl"></i></button>
        </form>

        <form id="next_Form" asp-action="GoNext" method="post">
            <button id="nextButton" type="submit" role="button">Next  <i class="fa-solid fa-circle-chevron-right xl"></i></button>
        </form>
        
        <button id="skipButton" type="submit" role="button">Skip  <i class="fa-solid fa-circle-chevron-right xl"></i></button>
    </div>

    @* Footer *@
    <div id="descriptions_Footer">
        <div id="updatedOn">
            Last updated @Model.Igdb_UpdatedOnUtc.ToShortDateString()
        </div>

        <div id="dataSource">
            Data made available by <a href="https://www.igdb.com/">igdb.com</a>
        </div>
    </div>

</div>

@* JS *@
@section Scripts
{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/descriptionsCountdownTimer.js" asp-append-version="true"></script>

    <script>
        const titleExpression = /(?:(?:\:.*)|[^a-z\u00C0-\u024F])|(?:\b[iivx]+\b)|(?:^the)/g;

        var gameTitle = $('#gameTitle').val();
        var gameTitleFormatted = gameTitle.toLowerCase().replace(titleExpression, '');

        $(document).ready(function () {
            // User key press
            $('#userInput').on('input', function () {

                var inputValue = $(this).val().toLowerCase().replace(titleExpression, '');

                if (gameTitleFormatted === inputValue) {
                    validate();

                    this.addEventListener('keydown', function (event) {
                        if (event.key === 'Enter') {
                            goNext();
                        }
                    });
                }
            });

            // Skip button
            $('#skipButton').click(function () {
                skip();
            });
        });

        function skip() {
            // Pause timer
            $.ajax({
                type: 'POST',
                url: '/Descriptions/PauseTimer'
            });

            fetch('/Descriptions/Skip', {
                method: 'POST',
            })
                .then(response => response.json())
                .then(data => {
                    $('#incorrectIcon').css('display', 'block');

                    // Briefly flash red
                    $('#timer').addClass('color_red');

                    // Remove 20 seconds from timer
                    countdownTimer_SubtractTime(20);
                    revealAnswer();

                    setTimeout(function () {
                        $('#timer').removeClass('color_red');
                    }, 500);
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
               
        }

        function validate() {
            fetch('/Descriptions/Validate', {
                method: 'POST',
            })
            .then(response => response.json())
            .then(data => {

                // Pause timer
                $.ajax({
                    type: 'POST',
                    url: '/Descriptions/PauseTimer'
                });

                revealAnswer();

                $('#correctIcon').css('display', 'block');
                $('#scoreDisplay').text('Score: ' + data.currentScore);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        }

        function revealAnswer() {
            $('#userInput').val(gameTitle);
            $('#next_Form').css('display', 'block');
            $('#skipButton').prop('disabled', true);
            $('#userInput').attr('readonly', true);
            $('#userInput').css('opacity', 0.6);
        }

        function goNext() {
            // Unpause timer
            $.ajax({
                type: 'POST',
                url: '/Descriptions/UnpauseTimer',
                success: function (data) { 
                    window.location.href = '/Descriptions/Index';
                }
            });
        }
    </script>
}