@model VideoGameGuy.Data.DescriptionsViewModel

@{
    ViewData["Title"] = "Descriptions";
}

<div id="descriptions_Grid">

    @* Content *@
    <div id="content_Grid">

        @* Status *@
        <div id="status_Grid">
            <div id="timer">@Model.CurrentRound.TimeRemaining.ToString(@"mm\:ss")</div>
        </div>

        @* Description *@
        <input id="gameTitle" type="hidden" name="gameTitle" value="@Model.CurrentRound?.GameTitle" />
        <div id="gameDescription">@Model.CurrentRound?.GameDescription</div>

        @* // User Input *@
        <input id="userInput" type="text" placeholder="[Enter Title]" autofocus/>
        <i id="correctCheckmark" class="fa-solid fa-square-check fa-2xl"></i>

        @* // Buttons *@
        <form id="next_Form" asp-action="GoNext" method="post">
            <button id="nextButton" type="submit" role="button">Next  <i class="fa-solid fa-circle-chevron-right xl"></i></button>
        </form>
        <form id="skip_Form" asp-action="Skip" method="post">
            <button id="skipButton" type="submit" role="button">Skip  <i class="fa-solid fa-circle-chevron-right xl"></i></button>
        </form>
    </div>

    @* Footer *@
    <div id="descriptions_Footer">
        <div id="updatedOn">
            Last updated @Model.LastUpdateOn.ToShortDateString()
        </div>

        <div id="dataSource">
            Data made available by <a href="https://www.igdb.com/">igdb.com</a>
        </div>
    </div>

</div>

@* JS *@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#userInput').on('input', function () {
            let gameTitle = $('#gameTitle').val().replace(/[^a-zA-Z0-9]/g, '');
            var inputValue = $(this).val().replace(/[^a-zA-Z0-9]/g, '');

            if (gameTitle.toLowerCase() === inputValue.toLowerCase()) {
                validate();

                this.addEventListener('keydown', function (event) {
                    if (event.key === 'Enter') {
                        goNext();
                    }
                });
            }
        });
    });

    // Call action via AJAX 
    function validate() {
        fetch('/Descriptions/Validate', {
            method: 'POST',
        })
        .then(response => response.json())
        .then(data => {
            $('#next_Form').css('display', 'block');
            $('#correctCheckmark').css('display', 'block');
            $('#skipButton').prop('disabled', true);
            $('#userInput').attr('readonly', true);
            $('#userInput').css('opacity', 0.6);
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function goNext() {
        window.location.href = '/Descriptions/Index';
    }

    // SignalR
    var timerConnection = new signalR.HubConnectionBuilder().withUrl("/timerHub").build();
    timerConnection.DoThing();

    timerConnection.on("TimeReceived", function (time) {
        var timerElement = document.getElementById("timer");
        timerElement.innerText = time;
    });

    timerConnection.start().then(function () {
        console.log("connected");
    }).catch(function (err) {
        return console.error(err.toString());
    });
</script>